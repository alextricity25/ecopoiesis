---

- name: Install distro packages
  package:
    name: "{{ craton_distro_packages }}"
    state: latest

- name: Install pip packages
  pip:
    name: "{{ item }}"
    executable: pip3
    state: latest
  with_items:
    - "{{ craton_pip_packages }}"

- name: Install craton into venv
  pip:
    name: git+https://github.com/openstack/craton.git#egg=craton
    virtualenv: "/opt/craton"
    virtualenv_python: python3.5

- set_fact:
    craton_venv: /opt/craton

- name: Copy venv exec to craton venv
  template:
    src: venv_exec.j2
    dest: "{{ craton_venv }}/exec"
    mode: 755

- name: Create craton directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ craton_config_dir }}"
    - "{{ craton_log_dir }}"

- name: Copy craton-api.conf to craton config dir
  template:
    src: craton-api.conf.j2
    dest: "{{ craton_config_dir }}/craton-api.conf"

- name: Copy craton-api-paste.ini to craton config dir
  copy:
    src: craton-api-paste.ini
    dest: "{{ craton_config_dir }}/craton-api-paste.ini"

- name: Ensure mysql daemon started
  service:
    name: mysql
    state: started
    enabled: yes
    
- name: Create craton database
  mysql_db:
    name: "{{ craton_db_name }}"
    state: present
    encoding: utf8
  register: craton_db_created

- name: Create craton user
  mysql_user:
    name: "{{ craton_db_user }}"
    password: "{{ craton_db_password }}"
    priv: "{{ craton_db_name }}.*:ALL,GRANT"
    state: present

- name: Reload privilege tables
  command: "mysql -ne '{{ item }}'"
  with_items:
    - FLUSH PRIVILEGES

- name: Run craton dbsync upgrade
  command: "{{ craton_venv }}/exec craton-dbsync --config-file={{ craton_config_dir }}/craton-api.conf upgrade"
  when: craton_db_created.changed

- name: Run craton dbsync bootstrap
  command: "{{ craton_venv }}/exec craton-dbsync --config-file={{ craton_config_dir }}/craton-api.conf bootstrap"
  when: craton_db_created.changed
  register: craton_bootstrap_output

- name: Copy craton bootstrap output to file
  copy:
    content: "{{ craton_bootstrap_output.stdout }}"
    dest: "{{ craton_bootstrap_config_file }}"
  when: craton_db_created.changed

- name: Load variables from file
  include_vars:
    file: "{{ craton_bootstrap_config_file }}"
    name: craton

- name: Install craton systemd unit file
  template:
    src: craton-api-systemd.j2
    dest: /lib/systemd/system/craton-api.service

- name: Enable systemd service
  systemd:
    name: craton-api.service
    daemon_reload: yes
    enabled: yes
    state: started
